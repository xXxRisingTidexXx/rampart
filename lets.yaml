shell: bash
commands:
  build:
    description: Construct/renovate all local docker images
    cmd: |
      mkdir -p scientific scientific/images scientific/models scientific/tables && \
      if [[ ! -e scientific/auge.csv ]]; then touch scientific/auge.csv ; fi && \
      if [[ ! -e scientific/twinkle.csv ]]; then touch scientific/twinkle.csv ; fi && \
      docker-compose build golang notebook python
  psql:
    description: Run PostgreSQL CLI
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker exec -it rampart-database psql -d rampart -U postgres
      docker-compose down
  migrate:
    description: Upgrade the DB schema to the newest version
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker-compose run --rm migrate && \
      docker-compose down
  generate:
    description: Create the brand new migration files
    cmd: |
      printf 'Enter new migration name: ' && \
      read MIGRATION && \
      docker-compose run --rm generate $MIGRATION && \
      sudo chown -R $USER:$USER migrations
  messis:
    description: Launch flat mining application
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker-compose up messis
      docker-compose down
  warhol:
    description: Start the image downloader
    cmd: |
      rm -rf scientific/images && \
      mkdir scientific/images && \
      START=`date +%s` && \
      docker-compose run --rm warhol && \
      END=`date +%s` && \
      sudo chown -R $USER:$USER scientific && \
      echo "Total images: $(ls scientific/images | wc -l)" && \
      echo "Total size: $(du -hs scientific/images | cut -f1)" && \
      echo "Total time: $((END - START))s"
  notebook:
    description: Setup Jupyter Notebook server
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker-compose up notebook && \
      docker-compose down
      chown -R $USER:$USER scientific
  mining:
    description: Run the data mining app single workflow
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker-compose run --rm mining
      docker-compose down
  app:
    description: Run the web app
    cmd: |
      docker-compose up -d database && \
      while ! nc -z localhost 5432 2>/dev/null; do sleep 1; done && \
      docker-compose up app
      docker-compose down
