version: '3.7'
x-backend: &backend
  image: rampart-backend
  volumes:
    - .:/go/src/app
  env_file:
    - .env
services:
  database:
    image: postgis/postgis:12-master
    container_name: rampart-database
    restart: always
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: rampart
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
  backend:
    build:
      context: .
      dockerfile: docker/backend.dockerfile
    image: rampart-backend
  migrations:
    <<: *backend
    container_name: rampart-migrations
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/migrations
  mining:
    <<: *backend
    container_name: rampart-mining
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -debug -miner domria-primary
  gauging:
    <<: *backend
    container_name: rampart-gauging
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/gauging
    ports:
      - 9003:9003
      - 9004:9004
    restart: on-failure
  tgbot:
    <<: *backend
    container_name: rampart-tgbot
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/tgbot -debug
    restart: on-failure
  mining-domria-primary:
    <<: *backend
    container_name: rampart-mining-domria-primary
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -miner domria-primary
    ports:
      - 9001:9001
    restart: on-failure
  mining-domria-secondary:
    <<: *backend
    container_name: rampart-mining-domria-secondary
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -miner domria-secondary
    ports:
      - 9002:9002
    restart: on-failure
  checks:
    build:
      context: .
      dockerfile: docker/checks.dockerfile
    image: rampart-checks
  gofmt:
    image: rampart-checks
    container_name: rampart-gofmt
    volumes:
      - .:/go/src/app
    command: gofmt -w -s .
  lint:
    image: rampart-checks
    container_name: rampart-lint
    volumes:
      - .:/go/src/app
    command: golangci-lint run
  test:
    image: rampart-checks
    container_name: rampart-test
    volumes:
      - .:/go/src/app
    command: richgo test github.com/xXxRisingTidexXx/rampart/internal/mining/osmgeo
  notebook:
    build:
      context: .
      dockerfile: docker/notebook.dockerfile
    image: rampart-notebook
    container_name: rampart-notebook
    volumes:
      - ./notebooks:/home/jovyan
    ports:
      - 8888:8888
    environment:
      JUPYTER_ENABLE_LAB: 'yes'
volumes:
  database:
    name: rampart-database
networks:
  default:
    name: rampart-default
