version: '3.7'
x-migrate: &x-migrate
  image: migrate/migrate:v4.12.2
  volumes:
    - ./migrations:/migrations
  env_file:
    - .env
x-golang: &x-golang
  image: rampart-golang
  volumes:
    - .:/go/src/app
  env_file:
    - .env
x-checks: &x-checks
  image: rampart-checks
  volumes:
    - .:/go/src/app
x-python: &x-python
  image: rampart-python
  volumes:
    - .:/app
  env_file:
    - .env
services:
  database:
    image: postgis/postgis:12-master
    container_name: rampart-database
    restart: always
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: rampart
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
  migrate:
    <<: *x-migrate
    container_name: rampart-migrate
    command: -path migrations -database $RAMPART_DATABASE_DSN up
  generate:
    <<: *x-migrate
    container_name: rampart-generate
  golang:
    build:
      context: .
      dockerfile: docker/golang.dockerfile
    image: rampart-golang
  mining:
    <<: *x-golang
    container_name: rampart-mining
    command: go run ${RAMPART_MODULE}/cmd/mining -debug -miner domria-primary
  mining-domria-primary:
    <<: *x-golang
    container_name: rampart-mining-domria-primary
    command: go run ${RAMPART_MODULE}/cmd/mining -miner domria-primary
    ports:
      - 9001:9001
  mining-domria-secondary:
    <<: *x-golang
    container_name: rampart-mining-domria-secondary
    command: go run ${RAMPART_MODULE}/cmd/mining -miner domria-secondary
    ports:
      - 9002:9002
  checks:
    build:
      context: .
      dockerfile: docker/checks.dockerfile
    image: rampart-checks
  gofmt:
    <<: *x-checks
    container_name: rampart-gofmt
    command: gofmt -w -s .
  lint:
    <<: *x-checks
    container_name: rampart-lint
    command: golangci-lint run
  test:
    <<: *x-checks
    container_name: rampart-test
    command: richgo test ${RAMPART_MODULE}/internal/domria ${RAMPART_MODULE}/internal/metrics
  notebook:
    build:
      context: .
      dockerfile: docker/notebook.dockerfile
    image: rampart-notebook
    container_name: rampart-notebook
    volumes:
      - .:/home/jovyan
    ports:
      - 8888:8888
    environment:
      JUPYTER_ENABLE_LAB: 'yes'
    env_file:
      - .env
  python:
    build:
      context: .
      dockerfile: docker/python.dockerfile
    image: rampart-python
  telebot:
    <<: *x-python
    container_name: rampart-telebot
    command: python -m rampart.telebot
  browsing:
    <<: *x-python
    container_name: rampart-browsing
    command: flask run
volumes:
  database:
    name: rampart-database
networks:
  default:
    name: rampart-default
