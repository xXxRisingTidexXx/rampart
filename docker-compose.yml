version: '3.8'
x-migrate: &x-migrate
  image: migrate/migrate:v4.12.2
  volumes:
    - ./migrations:/migrations
  env_file:
    - .env
x-aggregation: &x-aggregation
  image: rampart-aggregation
  volumes:
    - ./go.mod:/go/src/app/go.mod
    - ./go.sum:/go/src/app/go.sum
    - ./cmd:/go/src/app/cmd
    - ./internal:/go/src/app/internal
    - ./config:/go/src/app/config
    - ./scientific:/go/src/app/scientific
    - ./images:/go/src/app/images
  env_file:
    - .env
x-gochecks: &x-gochecks
  image: rampart-gochecks
  volumes:
    - ./go.mod:/go/src/app/go.mod
    - ./go.sum:/go/src/app/go.sum
    - ./.golangci.yml:/go/src/app/.golangci.yml
    - ./cmd:/go/src/app/cmd
    - ./internal:/go/src/app/internal
    - ./config:/go/src/app/config
x-ranking: &x-ranking
  image: rampart-ranking
  volumes:
    - ./requirements:/app/requirements
    - ./rampart:/app/rampart
    - ./templates:/app/templates
    - ./scientific:/app/scientific
  env_file:
    - .env
x-recognition: &x-recognition
  image: rampart-recognition
  volumes:
    - ./requirements:/app/requirements
    - ./rampart:/app/rampart
    - ./scientific:/app/scientific
  env_file:
    - .env
x-pychecks: &x-pychecks
  image: rampart-pychecks
  volumes:
    - ./tox.ini:/app/tox.ini
    - ./requirements:/app/requirements
    - ./rampart:/app/rampart
  env_file:
    - .env
services:
  database:
    image: postgis/postgis:13-3.0-alpine
    container_name: rampart-database
    restart: always
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: rampart
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
  migrate:
    <<: *x-migrate
    container_name: rampart-migrate
    command: -path migrations -database $RAMPART_DATABASE_DSN up
  generate:
    <<: *x-migrate
    container_name: rampart-generate
  aggregation:
    build:
      context: .
      dockerfile: docker/aggregation.dockerfile
    image: rampart-aggregation
  mining:
    <<: *x-aggregation
    container_name: rampart-mining
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -debug -miner domria-primary
  imaging:
    <<: *x-aggregation
    container_name: rampart-imaging
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/imaging
  augmentation:
    <<: *x-aggregation
    container_name: rampart-augmentation
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/augmentation
  gochecks:
    build:
      context: .
      dockerfile: docker/gochecks.dockerfile
    image: rampart-gochecks
  lint:
    <<: *x-gochecks
    container_name: rampart-lint
    command: golangci-lint run
  test:
    <<: *x-gochecks
    container_name: rampart-test
    command:
      - richgo
      - test
      - github.com/xXxRisingTidexXx/rampart/internal/domria
      - github.com/xXxRisingTidexXx/rampart/internal/metrics
  notebook:
    build:
      context: .
      dockerfile: docker/notebook.dockerfile
    image: rampart-notebook
    container_name: rampart-notebook
    volumes:
      - ./notebooks:/home/jovyan/notebooks
      - ./images:/home/jovyan/images
      - ./scientific:/home/jovyan/scientific
      - ./.cache:/home/jovyan/.cache
      - ./.config:/home/jovyan/.config
      - ./.ipython:/home/jovyan/.ipython
      - ./.jupyter:/home/jovyan/.jupyter
      - ./.local:/home/jovyan/.local
      - ./.npm:/home/jovyan/.npm
    ports:
      - 8888:8888
    env_file:
      - .env
  ranking:
    build:
      context: .
      dockerfile: docker/ranking.dockerfile
    image: rampart-ranking
  telebot:
    <<: *x-ranking
    container_name: rampart-telebot
    command: python -m rampart.telebot
  browsing:
    <<: *x-ranking
    container_name: rampart-browsing
    command: python -m rampart.browsing
    ports:
      - 9211:9211
  recognition:
    build:
      context: .
      dockerfile: docker/recognition.dockerfile
    image: rampart-recognition
  auge:
    <<: *x-recognition
    container_name: rampart-auge
    command: python -m rampart.auge
  pychecks:
    build:
      context: .
      dockerfile: docker/pychecks.dockerfile
    image: rampart-pychecks
  flake8:
    <<: *x-pychecks
    container_name: rampart-flake8
    command: flake8 --config=tox.ini .
  mypy:
    <<: *x-pychecks
    container_name: rampart-mypy
    command: mypy --ignore-missing-imports rampart
  pytest:
    <<: *x-pychecks
    container_name: rampart-pytest
    command: pytest -vv rampart --full-trace -p no:cacheprovider
  mining-domria-primary:
    <<: *x-aggregation
    container_name: rampart-mining-domria-primary
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -miner domria-primary
    ports:
      - 9001:9001
  mining-domria-secondary:
    <<: *x-aggregation
    container_name: rampart-mining-domria-secondary
    command: go run github.com/xXxRisingTidexXx/rampart/cmd/mining -miner domria-secondary
    ports:
      - 9002:9002
volumes:
  database:
    name: rampart-database
networks:
  default:
    name: rampart-default
